yabai -m signal --add event=dock_did_restart action="sudo yabai --load-sa"
sudo yabai --load-sa
# https://github.com/xiamaz/YabaiIndicator

# global settings
yabai -m config mouse_follows_focus          on
yabai -m config focus_follows_mouse          autofocus

yabai -m config window_placement             second_child
yabai -m config window_topmost               off
yabai -m config split_ratio                  0.50
yabai -m config auto_balance                 off

yabai -m config window_opacity               on
yabai -m config active_window_opacity        1.0
yabai -m config normal_window_opacity        0.70
yabai -m config window_opacity_duration      0.0


yabai -m config window_shadow                on

yabai -m config window_border                on
yabai -m config window_border_width          8
yabai -m config window_border_width          4
yabai -m config active_window_border_color   0xFFFF0000
yabai -m config normal_window_border_color   0x01000000

yabai -m config mouse_modifier               fn
yabai -m config mouse_action1                move
yabai -m config mouse_action2                resize


# space config
yabai -m config layout                       bsp
yabai -m config top_padding                  20
yabai -m config bottom_padding               20
yabai -m config left_padding                 20
yabai -m config right_padding                20
yabai -m config window_gap                   20

yabai -m rule --add app=Moniteur manage=off
yabai -m rule --add title="Toggl Track" manage=off
yabai -m rule --add app=Finder title=Copy manage=off
yabai -m rule --add app="System Preferences" manage=off
yabai -m rule --add app="1Password" manage=off
yabai -m rule --add app="Fusion 360" manage=off opacity=1.0
yabai -m rule --add app="Autodesk Identity Manager" manage=off opacity=1.0
yabai -m rule --add app="ADPClientService" manage=off opacity=1.0


yabai -m signal --add event=window_destroyed action="yabai -m query --windows --window &> /dev/null || yabai -m window --focus mouse"
yabai -m signal --add event=application_terminated action="yabai -m query --windows --window &> /dev/null || yabai -m window --focus mouse"

# For external_bar
# yabai -m config external_bar all:28:0

yabai -m signal --add event=mission_control_exit action='echo "refresh" | nc -U /tmp/yabai-indicator.socket'
yabai -m signal --add event=display_added action='echo "refresh" | nc -U /tmp/yabai-indicator.socket'
yabai -m signal --add event=display_removed action='echo "refresh" | nc -U /tmp/yabai-indicator.socket'
yabai -m signal --add event=window_created action='echo "refresh windows" | nc -U /tmp/yabai-indicator.socket'
yabai -m signal --add event=window_destroyed action='echo "refresh windows" | nc -U /tmp/yabai-indicator.socket'
yabai -m signal --add event=window_focused action='echo "refresh windows" | nc -U /tmp/yabai-indicator.socket'
yabai -m signal --add event=window_moved action='echo "refresh windows" | nc -U /tmp/yabai-indicator.socket'
yabai -m signal --add event=window_resized action='echo "refresh windows" | nc -U /tmp/yabai-indicator.socket'
yabai -m signal --add event=window_minimized action='echo "refresh windows" | nc -U /tmp/yabai-indicator.socket'
yabai -m signal --add event=window_deminimized action='echo "refresh windows" | nc -U /tmp/yabai-indicator.socket'

echo "yabai configuration loaded.."
